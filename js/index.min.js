"use strict";const VERSION_TEXT="ver. 20210914.2";var nuko={gas:0,gasList:null,gasPref:"fastest",gasId:0,gasInterval:15e3,gasLimit:3e5,rate:[],rateRaw:[],rateId:0,rateInterval:3e4,rateContract:null,rateReserveUSDC:[],rateReserveJPYC:[],balanceJPYC:0,balanceUSDC:0,balanceMATIC:0,balanceContractJPYC:null,balanceContractUSDC:null,swapContract:[],swapMaxJPYC:1e4,swapMaxUSDC:100,swapSlippage:[.006,.0075],swapGasMax:300,swapLog:[],swapMaxLog:100,upperThreshold:117.9,lowerThreshold:115.9,target:0,spread:2,jpyusd:100,jpyusdInterval:3e5,jpyusdId:0,flgSwapping:0,wallet:null,password:"c04Bef8613730faC95166A970300caC35b1Af883",theDayOfTrueStable:"2099-12-31T23:23:59.000Z",theDayOfNuko:"2021-09-14T10:00:00.000Z",theDayOfNukoRateDeviate:117/110,contractRate:[]};const NODE_URL="wss://speedy-nodes-nyc.moralis.io/3e336936ccd6ec0af99dc191/polygon/mainnet/ws",contractAddress={JPYC:"0x6ae7dfc73e0dde2aa99ac063dcf7e8a63265108c",USDC:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",routerQuick:"0xa5e0829caced8ffdd4de3c43696c57f7d7a678ff",pairQuick:"0x205995421C72Dc223F36BbFad78B66EEa72d2677",routerSushi:"0x1b02da8cb0d097eb8d57a175b88c7d8b47997506",pairSushi:"0xfbae8e2d04a67c10047d83ee9b8aeffe7f6ea3f4"},decimal={JPYC:18,USDC:6},options={timeout:3e4,clientConfig:{keepalive:!0,keepaliveInterval:6e4},reconnect:{auto:!0,delay:1e3,maxAttempts:5,onTimeout:!1}},provider=new Web3.providers.WebsocketProvider(NODE_URL,options),web3=new Web3(provider),goSwap=async(from,to,amount,minAmount,gas,pool)=>{let i=pool,table=$("#dataTable").DataTable(),timestamp,dt=(new Date).toLocaleString(),row=table.row.add([dt,from,to,nuko.rate[i],amount,minAmount,gas,""]);row.draw(),table.column("0:visible").order("dsc").draw(),console.log(minAmount);let amountIn=Math.floor(amount*10**decimal[from])/10**decimal[from];amountIn="JPYC"==from?web3.utils.toWei(amountIn.toString()):web3.utils.toWei(amountIn.toString(),"mwei");let amountOut=Math.floor(minAmount*10**decimal[to])/10**decimal[to];amountOut="JPYC"==from?web3.utils.toWei(amountOut.toString(),"mwei"):web3.utils.toWei(amountOut.toString());let tokenIn=contractAddress[from],tokenOut=contractAddress[to],link="",poolImg,poolLink="<img src='"+(0==i?"img/quickswap.png":"img/sushi.png")+"' width='20px'/>";try{await nuko.swapContract[i].methods.swapExactTokensForTokens(web3.utils.toHex(amountIn),web3.utils.toHex(amountOut),[tokenIn,tokenOut],nuko.wallet[0].address,Math.floor(Date.now()/1e3)+300).send({from:nuko.wallet[0].address,gasLimit:web3.utils.toHex(nuko.gasLimit),gasPrice:web3.utils.toHex(1e9*gas)}).once("transactionHash",hash=>{link='<a href="https://polygonscan.com/tx/'+hash+'" target="_blank">TX</a>',row.data([dt,from,to,poolLink+nuko.rate[i],amount,minAmount,gas,link]).draw(),table.column("0:visible").order("dsc").draw()}).once("receipt",receipt=>{console.log(receipt);let gasUsed=(receipt.gasUsed*gas*1e9*1e-18).toFixed(4);link+='<i class="fas fa-check-circle"></i>';let log=[dt,from,to,poolLink+nuko.rate[i],amount,minAmount,gasUsed,link];row.data(log).draw(),table.column("0:visible").order("dsc").draw(),nuko.swapLog.unshift(log)>nuko.swapMaxLog&&nuko.swapLog.pop(),localStorage.swapLog=JSON.stringify(nuko.swapLog)})}catch(e){link+='<i class="fas fa-exclamation-triangle"></i>',row.data([dt,from,to,poolLink+nuko.rate[i],amount,minAmount,gas,link]).draw(),table.column("0:visible").order("dsc").draw(),console.log(e)}nuko.flgSwapping=!1,getBalance()},watchRate=async()=>{if(await getBalance(),await getRate(),$("#swapSwitch").prop("checked")){console.log(nuko.rate);let array=[0,1];Math.random()>.5&&(array=array.reverse()),array.forEach(i=>{if(nuko.rate[i]>nuko.upperThreshold&&parseFloat(web3.utils.fromWei(nuko.balanceUSDC,"mwei"))>1){if(!nuko.flgSwapping){nuko.flgSwapping=!0;let bl=.99999*parseFloat(web3.utils.fromWei(nuko.balanceUSDC,"mwei")),amount=bl>nuko.swapMaxUSDC?nuko.swapMaxUSDC:bl,minAmount=amount*nuko.rate[i]*(1-nuko.swapSlippage[i]);goSwap("USDC","JPYC",amount,minAmount,nuko.gas<nuko.swapGasMax?nuko.gas:nuko.swapGasMax,i)}}else if(nuko.rate[i]<nuko.lowerThreshold&&parseFloat(web3.utils.fromWei(nuko.balanceJPYC))>100&&!nuko.flgSwapping){nuko.flgSwapping=!0;let bl=.99999*parseFloat(web3.utils.fromWei(nuko.balanceJPYC)),amount=bl>nuko.swapMaxJPYC?nuko.swapMaxJPYC:bl,minAmount=amount/nuko.rate[i]*(1-nuko.swapSlippage[i]);goSwap("JPYC","USDC",amount,minAmount,nuko.gas<nuko.swapGasMax?nuko.gas:nuko.swapGasMax,i)}})}updateLiquidity()},getRate=async()=>{for(let i=0;i<2;i++)await nuko.contractRate[i].methods.getReserves().call().then(values=>{nuko.rateReserveUSDC[i]=values[0]/1e6,nuko.rateReserveJPYC[i]=values[1]/1e18,nuko.rateRaw[i]=nuko.rateReserveJPYC[i]/nuko.rateReserveUSDC[i],nuko.rate[i]=Math.floor(nuko.rateRaw[i]*Math.pow(10,2))/Math.pow(10,2)});$("#rate").text(nuko.rate[0]+" / "+nuko.rate[1]);let timestamp,dt=(new Date).toLocaleString().slice(0,-3);chartAddData(dt,[nuko.rate[0],nuko.rate[1]])},chartAddData=(label,data)=>{let chart=chartJPYCUSDC;chart.data.labels.push(label),chart.data.datasets[0].data.push(data[0]),chart.data.datasets[1].data.push(data[1]),chart.update()},getBalance=async()=>{web3.eth.getBalance(nuko.wallet[0].address).then(balance=>{nuko.balanceMATIC=balance;let m=parseFloat(web3.utils.fromWei(balance));m=Math.floor(m*Math.pow(10,4))/Math.pow(10,4),$("#balanceMATIC").text(m)}),nuko.balanceContractJPYC.methods.balanceOf(nuko.wallet[0].address).call().then(balance=>{nuko.balanceJPYC=balance;let m=parseFloat(web3.utils.fromWei(balance));m=Math.floor(m*Math.pow(10,2))/Math.pow(10,2),$("#balanceJPYC").text(m)}),nuko.balanceContractUSDC.methods.balanceOf(nuko.wallet[0].address).call().then(balance=>{nuko.balanceUSDC=balance;let m=parseFloat(web3.utils.fromWei(balance,"mwei"));return m=Math.floor(m*Math.pow(10,4))/Math.pow(10,4),$("#balanceUSDC").text(m),balance})},getAllowance=async(contractAddress,routerAddress,button)=>{let allowanceContract=new web3.eth.Contract(abiERC20,contractAddress);await allowanceContract.methods.allowance(nuko.wallet[0].address,routerAddress).call().then(amount=>{parseInt(amount)>0&&$(button).addClass("disabled")})},updateAllowance=async()=>{getAllowance(contractAddress.USDC,contractAddress.routerQuick,"#approveUSDC0"),getAllowance(contractAddress.JPYC,contractAddress.routerQuick,"#approveJPYC0"),getAllowance(contractAddress.JPYC,contractAddress.routerSushi,"#approveJPYC1"),getAllowance(contractAddress.USDC,contractAddress.routerSushi,"#approveUSDC1")},watchGas=async()=>{nuko.gas=await getGas(),$("#gasPrice").text(nuko.gas+" gwei"),$("#gasFastest").text("fastest : "+parseInt(nuko.gasList.fastest)+" gwei"),$("#gasFast").text("fast : "+parseInt(nuko.gasList.fast)+" gwei"),$("#gasStandard").text("standard : "+parseInt(nuko.gasList.standard)+" gwei")},getGas=async()=>{let response=await fetch("https://gasstation-mainnet.matic.network"),json=await response.json(),gas;return nuko.gasList=json,parseInt(json[nuko.gasPref])},getJPYUSD=async()=>{let response=await fetch("https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=jpy%2Cusd"),json=await response.json(),jpyusd=parseInt(json.bitcoin.jpy)/parseInt(json.bitcoin.usd),deviateTorelance=Math.max(0,Date.parse(nuko.theDayOfTrueStable)-Date.now())/(Date.parse(nuko.theDayOfTrueStable)-Date.parse(nuko.theDayOfNuko)),targetRate=116.7+.1*Math.random();return nuko.target=targetRate,nuko.upperThreshold=targetRate+nuko.spread/2,nuko.lowerThreshold=targetRate-nuko.spread/2,jpyusd},watchJPYUSD=async()=>{nuko.jpyusd=await getJPYUSD(),$("#jpyusd").text(nuko.jpyusd.toFixed(2)),updateLimit()},approveCoin=async(tokenContractAddress,spenderAddress,id)=>{console.log("try approving "+tokenContractAddress);let tokenContract=new web3.eth.Contract(abiERC20,tokenContractAddress),tokenDecimals=web3.utils.toBN(18),tokenAmountToApprove=web3.utils.toBN(999e9),calculatedApproveValue=web3.utils.toHex(tokenAmountToApprove.mul(web3.utils.toBN(10).pow(tokenDecimals)));await tokenContract.methods.approve(spenderAddress,calculatedApproveValue).send({from:nuko.wallet[0].address,gasLimit:web3.utils.toHex(1e5),gasPrice:web3.utils.toHex(1e9*nuko.gasList.fast)}).once("transactionHash",hash=>{$(id).text("sent"),console.log(hash)}).once("receipt",receipt=>{console.log(receipt),$(id).text("done")})},updateLimit=()=>{nuko.upperThreshold=nuko.target+nuko.spread/2,nuko.lowerThreshold=nuko.target-nuko.spread/2,$("#upperLimit").text(nuko.upperThreshold.toFixed(2)),$("#lowerLimit").text(nuko.lowerThreshold.toFixed(2))},main=()=>{$("#versionText").text(VERSION_TEXT),$("#versionText2").text(VERSION_TEXT),initialize(),nuko.balanceContractJPYC=new web3.eth.Contract(abiERC20,contractAddress.JPYC),nuko.balanceContractUSDC=new web3.eth.Contract(abiERC20,contractAddress.USDC),nuko.contractRate[0]=new web3.eth.Contract(abi,contractAddress.pairQuick),nuko.contractRate[1]=new web3.eth.Contract(abi,contractAddress.pairSushi),nuko.swapContract[0]=new web3.eth.Contract(abiUniswapV2Router,contractAddress.routerQuick),nuko.swapContract[1]=new web3.eth.Contract(abiUniswapV2Router,contractAddress.routerSushi),watchRate(),nuko.rateId=setInterval(watchRate,nuko.rateInterval),watchGas(),nuko.gasId=setInterval(watchGas,nuko.gasInterval),watchJPYUSD(),nuko.jpyusdId=setInterval(watchJPYUSD,nuko.jpyusdInterval)},updateAccount=()=>{null==nuko.wallet?$("#wallet").text("Create or Import Wallet"):$("#wallet").text(nuko.wallet[0].address)},resizeChart=()=>{let w=$("#containerBody").width()-400;chartJPYCUSDC.resize(w,ctx.clientHeight)},updateLiquidity=()=>{$("#quickLiquidity").text("$"+(nuko.rateReserveUSDC[0]+nuko.rateReserveJPYC[0]/nuko.rate[0]).toLocaleString(void 0,{maximumFractionDigits:0})),$("#quickUSDC").text(nuko.rateReserveUSDC[0].toLocaleString(void 0,{maximumFractionDigits:0})+" USDC"),$("#quickJPYC").text(nuko.rateReserveJPYC[0].toLocaleString(void 0,{maximumFractionDigits:0})+" JPYC"),$("#sushiLiquidity").text("$"+(nuko.rateReserveUSDC[1]+nuko.rateReserveJPYC[1]/nuko.rate[1]).toLocaleString(void 0,{maximumFractionDigits:0})),$("#sushiUSDC").text(nuko.rateReserveUSDC[1].toLocaleString(void 0,{maximumFractionDigits:0})+" USDC"),$("#sushiJPYC").text(nuko.rateReserveJPYC[1].toLocaleString(void 0,{maximumFractionDigits:0})+" JPYC")},initialize=()=>{null==localStorage.gasPref&&(localStorage.gasPref="fastest"),nuko.gasPref=localStorage.gasPref;try{web3.eth.accounts.wallet.load(nuko.password),nuko.wallet=web3.eth.accounts.wallet,updateAccount()}catch(e){}$("#createWallet").on("click",()=>{$("#import").hide(),$("#createNewWallet").show(),$("#privateKey").prop("readonly",!0),$("#modalTitle").text("Create New Wallet"),$("#exampleModal").modal("show")}),$("#importWallet").on("click",()=>{$("#import").show(),$("#createNewWallet").hide(),$("#modalTitle").text("Import Wallet"),$("#privateKey").prop("readonly",!1),$("#exampleModal").modal("show")}),$("#approveCoins").on("click",()=>{$("#modalApprove").modal("show")}),$("#approveJPYC0").on("click",()=>{$("#approveJPYC0").addClass("disabled"),approveCoin(contractAddress.JPYC,contractAddress.routerQuick,"#approveJPYCtext0")}),$("#approveUSDC0").on("click",()=>{$("#approveUSDC0").addClass("disabled"),approveCoin(contractAddress.USDC,contractAddress.routerQuick,"#approveUSDCtext0")}),$("#approveJPYC1").on("click",()=>{$("#approveJPYC1").addClass("disabled"),approveCoin(contractAddress.JPYC,contractAddress.routerSushi,"#approveJPYCtext1")}),$("#approveUSDC1").on("click",()=>{$("#approveUSDC1").addClass("disabled"),approveCoin(contractAddress.USDC,contractAddress.routerSushi,"#approveUSDCtext1")}),$("#options").on("click",()=>{$("#modalOption").modal("show")}),$(document).on("input","#spreadWidth",(function(){nuko.spread=parseFloat($(this).val()),localStorage.spread=nuko.spread,$("#spread").text(nuko.spread.toFixed(1)),updateLimit()})),$("#createNewWallet").on("click",()=>{web3.eth.accounts.wallet.clear(),nuko.wallet=web3.eth.accounts.wallet.create(1),web3.eth.accounts.wallet.save(nuko.password),$("#address").val(nuko.wallet[0].address),$("#privateKey").val(nuko.wallet[0].privateKey),updateAccount()}),$("#logout").on("click",()=>{web3.eth.accounts.wallet.clear(),web3.eth.accounts.wallet.save(nuko.password),$("#address").val(""),$("#privateKey").val(""),nuko.wallet=null,updateAccount(),$("#logoutModal").modal("hide")}),$("#import").on("click",()=>{console.log("import");try{let account=web3.eth.accounts.privateKeyToAccount($("#privateKey").val());web3.eth.accounts.wallet.clear(),web3.eth.accounts.wallet.add(account),nuko.wallet=web3.eth.accounts.wallet,web3.eth.accounts.wallet.save(nuko.password),$("#address").val(nuko.wallet[0].address),$("#privateKey").val(nuko.wallet[0].privateKey),updateAccount()}catch(e){console.log(e)}}),$("#swapSwitch").on("change",()=>{localStorage.switch=$("#swapSwitch").prop("checked")}),$("#gasFastest").on("click",()=>{nuko.gasPref="fastest",localStorage.gasPref=nuko.gasPref,watchGas()}),$("#gasFast").on("click",()=>{nuko.gasPref="fast",localStorage.gasPref=nuko.gasPref,watchGas()}),$("#gasStandard").on("click",()=>{nuko.gasPref="standard",localStorage.gasPref=nuko.gasPref,watchGas()}),updateLimit(),null==localStorage.switch&&(localStorage.switch="false"),"true"==localStorage.switch&&$("#swapSwitch").bootstrapToggle("on"),nuko.swapLog=JSON.parse(localStorage.getItem("swapLog")||"[]");let table=$("#dataTable").DataTable();nuko.swapLog.forEach(log=>{table.row.add(log)}),table.column("0:visible").order("dsc").draw(),updateAllowance(),nuko.spread=parseFloat(localStorage.spread?localStorage.spread:2),$("#spreadWidth").val(nuko.spread),$("#spread").text(nuko.spread.toFixed(1))},abi=[{constant:!0,inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"_reserve0",type:"uint112"},{internalType:"uint112",name:"_reserve1",type:"uint112"},{internalType:"uint32",name:"_blockTimestampLast",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"}],abiERC20=[{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],type:"function"},{constant:!1,inputs:[{name:"spender",type:"address"},{name:"tokens",type:"uint256"}],name:"approve",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}],abiUniswapV2Router=[{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"}];function number_format(number,decimals,dec_point,thousands_sep){number=(number+"").replace(",","").replace(" ","");var n=isFinite(+number)?+number:0,prec=isFinite(+decimals)?Math.abs(decimals):0,sep=void 0===thousands_sep?",":thousands_sep,dec=void 0===dec_point?".":dec_point,s="",toFixedFix;return(s=(prec?function(n,prec){var k=Math.pow(10,prec);return""+Math.round(n*k)/k}(n,prec):""+Math.round(n)).split("."))[0].length>3&&(s[0]=s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g,sep)),(s[1]||"").length<prec&&(s[1]=s[1]||"",s[1]+=new Array(prec-s[1].length+1).join("0")),s.join(dec)}main(),$(document).ready(()=>{$("#dataTable").DataTable()}),Chart.defaults.global.defaultFontFamily="Nunito",Chart.defaults.global.defaultFontColor="#858796";var ctx=document.getElementById("myAreaChart"),chartJPYCUSDC=new Chart(ctx,{type:"line",data:{labels:[],datasets:[{label:"QuickSwap",lineTension:.3,backgroundColor:"rgba(78, 115, 223, 0.05)",borderColor:"rgba(78, 115, 223, 1)",pointRadius:3,pointBackgroundColor:"rgba(78, 115, 223, 1)",pointBorderColor:"rgba(78, 115, 223, 1)",pointHoverRadius:3,pointHoverBackgroundColor:"rgba(78, 115, 223, 1)",pointHoverBorderColor:"rgba(78, 115, 223, 1)",pointHitRadius:10,pointBorderWidth:2,data:[]},{label:"SushiSwap",lineTension:.3,backgroundColor:"rgba(204, 0, 255, 0.05)",borderColor:"rgba(204, 0, 255, 1)",pointRadius:3,pointBackgroundColor:"rgba(204, 0, 255, 1)",pointBorderColor:"rgba(204, 0, 255, 1)",pointHoverRadius:3,pointHoverBackgroundColor:"rgba(204, 0, 255, 1)",pointHoverBorderColor:"rgba(204, 0, 255, 1)",pointHitRadius:10,pointBorderWidth:2,data:[]}]},options:{onResize:resizeChart,resizeDelay:100,responsive:!0,maintainAspectRatio:!1,layout:{padding:{left:10,right:25,top:25,bottom:0}},scales:{xAxes:[{time:{unit:"date"},gridLines:{display:!1,drawBorder:!1},ticks:{maxTicksLimit:7}}],yAxes:[{ticks:{maxTicksLimit:5,padding:10,callback:function(value,index,values){return number_format(value,2)+""}},gridLines:{color:"rgb(234, 236, 244)",zeroLineColor:"rgb(234, 236, 244)",drawBorder:!1,borderDash:[2],zeroLineBorderDash:[2]}}]},legend:{display:!0},tooltips:{backgroundColor:"rgb(255,255,255)",bodyFontColor:"#858796",titleMarginBottom:10,titleFontColor:"#6e707e",titleFontSize:14,borderColor:"#dddfeb",borderWidth:1,xPadding:15,yPadding:15,displayColors:!1,intersect:!1,mode:"index",caretPadding:10,callbacks:{label:function(tooltipItem,chart){var datasetLabel;return(chart.datasets[tooltipItem.datasetIndex].label||"")+": "+number_format(tooltipItem.yLabel,2)}}}}});