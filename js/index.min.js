
"use strict";import{Nuko}from"./lib/Nuko.min.js";var nukoZ=new Nuko;const VERSION_TEXT="20210924.0";var nuko={rate:[],rateRaw:[],rateId:0,rateInterval:3e4,rateContract:null,rateReserveUSDC:[],rateReserveJPYC:[],rateReserveMATIC:[],allowanceUSDC:[],allowanceJPYC:[],balanceJPYC:0,balanceUSDC:0,balanceMATIC:0,balanceContractJPYC:null,balanceContractUSDC:null,swapContract:[],swapMaxJPYC:1e4,swapMinJPYC:1e3,swapMaxUSDC:100,swapMinUSDC:10,swapSlippage:[.006,.0075],swapGasMax:300,swapLog:[],swapMaxLog:100,upperThreshold:117.9,lowerThreshold:115.9,target:0,spread:2,jpyusd:100,jpyusdInterval:3e5,jpyusdId:0,flgSwapping:0,wallet:null,user:"",password:"c04Bef8613730faC95166A970300caC35b1Af883",contractRate:[],versionInterval:36e5,versionAlertFlag:!1,keepaliveInterval:45e3,reloadAvailableUpdates:!1,lowerSwapMaticThreshold:0,swapMaticAmount:0,currentWeb3Provider:0};const NODE_URL=["wss://speedy-nodes-nyc.moralis.io/3e336936ccd6ec0af99dc191/polygon/mainnet/ws","https://speedy-nodes-nyc.moralis.io/3e336936ccd6ec0af99dc191/polygon/mainnet","https://polygon-rpc.com"],contractAddress={JPYC:"0x6ae7dfc73e0dde2aa99ac063dcf7e8a63265108c",USDC:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",MATIC:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",routerQuick:"0xa5e0829caced8ffdd4de3c43696c57f7d7a678ff",pairQuick:"0x205995421C72Dc223F36BbFad78B66EEa72d2677",routerSushi:"0x1b02da8cb0d097eb8d57a175b88c7d8b47997506",pairSushi:"0xfbae8e2d04a67c10047d83ee9b8aeffe7f6ea3f4",pairMATIC_JPYC:"0x7105f0e4a000fae92b1299734b18e7d375968371",pairMATIC_USDC:"0x6e7a5fafcec6bb1e78bae2a1f0b612012bf14827"},decimal={JPYC:18,USDC:6,MATIC:18},options={timeout:3e4,clientConfig:{keepalive:!0,keepaliveInterval:6e4},reconnect:{auto:!0,delay:1e3,maxAttempts:5,onTimeout:!1}};var provider=new Web3.providers.WebsocketProvider(NODE_URL[0],options),web3=new Web3(provider);const goSwap=async(from,to,amount,minAmount,gas,pool)=>{let i=pool,table=$("#dataTable").DataTable(),timestamp,dt=(new Date).toLocaleString(),gasEstimate="est. "+(gas*nukoZ.gas.limit/1e9*.5).toFixed(4),row=table.row.add([dt,from,to,nuko.rate[i],amount.toLocaleString(void 0,{maximumFractionDigits:2}),minAmount.toLocaleString(void 0,{maximumFractionDigits:2}),gasEstimate,""]);row.draw(),table.column("0:visible").order("dsc").draw();let amountIn=Math.floor(amount*10**decimal[from])/10**decimal[from];amountIn="JPYC"==from?web3.utils.toWei(amountIn.toString()):web3.utils.toWei(amountIn.toString(),"mwei");let amountOut=Math.floor(minAmount*10**decimal[to])/10**decimal[to];amountOut="JPYC"==from?web3.utils.toWei(amountOut.toString(),"mwei"):web3.utils.toWei(amountOut.toString());let tokenIn=contractAddress[from],tokenOut=contractAddress[to],link="",poolImg,poolLink="<img src='"+(0==i?"img/quickswap.png":"img/sushi.png")+"' width='20px'/>";try{await nuko.swapContract[i].methods.swapExactTokensForTokens(web3.utils.toHex(amountIn),web3.utils.toHex(amountOut),[tokenIn,tokenOut],nuko.wallet[0].address,Math.floor(Date.now()/1e3)+300).send({from:nuko.wallet[0].address,gasLimit:web3.utils.toHex(nukoZ.gas.limit),gasPrice:web3.utils.toHex(1e9*gas)}).once("transactionHash",hash=>{link='<a href="https://polygonscan.com/tx/'+hash+'" target="_blank">TX</a>',row.data([dt,from,to,poolLink+nuko.rate[i],amount.toLocaleString(void 0,{maximumFractionDigits:2}),minAmount.toLocaleString(void 0,{maximumFractionDigits:2}),gasEstimate,link]).draw(),table.column("0:visible").order("dsc").draw()}).once("receipt",receipt=>{console.log(receipt);let gasUsed=(receipt.gasUsed*gas*1e9*1e-18).toFixed(4);link+='<i class="fas fa-check-circle"></i>';let log=[dt,from,to,poolLink+nuko.rate[i],amount.toLocaleString(void 0,{maximumFractionDigits:2}),minAmount.toLocaleString(void 0,{maximumFractionDigits:2}),gasUsed,link],jpyc,usdc,total;row.data(log).draw(),table.column("0:visible").order("dsc").draw(),nuko.swapLog.unshift(log)>nuko.swapMaxLog&&nuko.swapLog.pop(),localStorage.swapLog=JSON.stringify(nuko.swapLog),"JPYC"==from?(jpyc=parseFloat(amount),usdc=0,total=jpyc/nuko.rate[i]):(jpyc=0,usdc=parseFloat(amount),total=usdc),Nuko.API.postWin(dt,nuko.wallet[0].address,usdc,jpyc,total,"")})}catch(e){link+='<i class="fas fa-exclamation-triangle"></i>',row.data([dt,from,to,poolLink+nuko.rate[i],amount.toLocaleString(void 0,{maximumFractionDigits:2}),minAmount.toLocaleString(void 0,{maximumFractionDigits:2}),gasEstimate,link]).draw(),table.column("0:visible").order("dsc").draw(),console.log(e)}nuko.flgSwapping=!1,getBalance()},updateCommunityBalance=(json,rate)=>{json.jpycNum=parseFloat(json.jpyc),json.usdcNum=parseFloat(json.usdc),$("#communityBalanceJPYC").text(json.jpycNum.toLocaleString(void 0,{maximumFractionDigits:0})),$("#communityBalanceUSDC").text(json.usdcNum.toLocaleString(void 0,{maximumFractionDigits:2})),$("#communityBalanceJPYC2").text(json.jpycNum.toLocaleString(void 0,{maximumFractionDigits:0})),$("#communityBalanceUSDC2").text(json.usdcNum.toLocaleString(void 0,{maximumFractionDigits:2}));let chart=chartCommunityBalance;chart.data.datasets[0].data[0]=json.usdcNum,chart.data.datasets[0].data[1]=json.jpyc/rate,chart.update()},watchRate=async()=>{if(await getBalance(),await getRate(),$("#swapSwitch").prop("checked")){let array=[0,1];Math.random()>.5&&(array=array.reverse()),array.forEach(i=>{if(nuko.rate[i]>nuko.upperThreshold&&parseFloat(web3.utils.fromWei(nuko.balanceUSDC,"mwei"))>nuko.swapMinUSDC&&parseInt(nuko.allowanceUSDC[i])>0){if(!nuko.flgSwapping){nuko.flgSwapping=!0;let bl=.99999*parseFloat(web3.utils.fromWei(nuko.balanceUSDC,"mwei")),amount=bl>nuko.swapMaxUSDC?nuko.swapMaxUSDC:bl,minAmount=amount*nuko.rate[i]*(1-nuko.swapSlippage[i]);goSwap("USDC","JPYC",amount,minAmount,nukoZ.gas.price<nuko.swapGasMax?nukoZ.gas.price:nuko.swapGasMax,i)}}else if(nuko.rate[i]<nuko.lowerThreshold&&parseFloat(web3.utils.fromWei(nuko.balanceJPYC))>nuko.swapMinJPYC&&parseInt(nuko.allowanceJPYC[i])>0&&!nuko.flgSwapping){nuko.flgSwapping=!0;let bl=.99999*parseFloat(web3.utils.fromWei(nuko.balanceJPYC)),amount=bl>nuko.swapMaxJPYC?nuko.swapMaxJPYC:bl,minAmount=amount/nuko.rate[i]*(1-nuko.swapSlippage[i]);goSwap("JPYC","USDC",amount,minAmount,nukoZ.gas.price<nuko.swapGasMax?nukoZ.gas.price:nuko.swapGasMax,i)}}),await autoSwapMatic()}updateLiquidity()},getRate=async()=>{for(let i=0;i<2;i++)await nuko.contractRate[i].methods.getReserves().call().then(values=>{nuko.rateReserveUSDC[i]=values[0]/1e6,nuko.rateReserveJPYC[i]=values[1]/1e18,nuko.rateRaw[i]=nuko.rateReserveJPYC[i]/nuko.rateReserveUSDC[i],nuko.rate[i]=Math.floor(nuko.rateRaw[i]*Math.pow(10,2))/Math.pow(10,2)});$("#rate").text(nuko.rate[0]+" / "+nuko.rate[1]);let timestamp,dt=(new Date).toLocaleString().slice(0,-3);chartAddData(dt,[nuko.rate[0],nuko.rate[1]])},chartAddData=(label,data)=>{let chart=chartJPYCUSDC;chart.data.labels.push(label),chart.data.datasets[0].data.push(data[0]),chart.data.datasets[1].data.push(data[1]),chart.update()},getBalance=async()=>{web3.eth.getBalance(nuko.wallet[0].address).then(balance=>{nuko.balanceMATIC=balance;let m=parseFloat(web3.utils.fromWei(balance));m=Math.floor(m*Math.pow(10,4))/Math.pow(10,4),$("#balanceMATIC").text(m.toLocaleString(void 0,{maximumFractionDigits:4}))}),nuko.balanceContractJPYC.methods.balanceOf(nuko.wallet[0].address).call().then(balance=>{nuko.balanceJPYC=balance;let m=parseFloat(web3.utils.fromWei(balance));m=Math.floor(m*Math.pow(10,2))/Math.pow(10,2),$("#balanceJPYC").text(m.toLocaleString(void 0,{maximumFractionDigits:0}))}),nuko.balanceContractUSDC.methods.balanceOf(nuko.wallet[0].address).call().then(balance=>{nuko.balanceUSDC=balance;let m=parseFloat(web3.utils.fromWei(balance,"mwei"));return m=Math.floor(m*Math.pow(10,4))/Math.pow(10,4),$("#balanceUSDC").text(m.toLocaleString(void 0,{maximumFractionDigits:2})),balance})},getAllowance=async(contractAddress,routerAddress,button)=>{let allowanceContract=new web3.eth.Contract(abiERC20,contractAddress),allowance=0;return await allowanceContract.methods.allowance(nuko.wallet[0].address,routerAddress).call().then(amount=>{parseInt(amount)>0&&$(button).addClass("disabled"),allowance=amount}),allowance},updateAllowance=async()=>{nuko.allowanceUSDC[0]=await getAllowance(contractAddress.USDC,contractAddress.routerQuick,"#approveUSDC0"),nuko.allowanceJPYC[0]=await getAllowance(contractAddress.JPYC,contractAddress.routerQuick,"#approveJPYC0"),nuko.allowanceJPYC[1]=await getAllowance(contractAddress.JPYC,contractAddress.routerSushi,"#approveJPYC1"),nuko.allowanceUSDC[1]=await getAllowance(contractAddress.USDC,contractAddress.routerSushi,"#approveUSDC1")},watchGas=async()=>{let gas=await nukoZ.gas.getGas();$("#gasPrice").text(gas+" "+nukoZ.gas.pref),nukoZ.gas.labels.forEach(label=>{let str=label[0].toUpperCase()+label.substring(1);$("#gas"+str).text(label+" : "+parseInt(nukoZ.gas.list[label])+" gwei")})},getJPYUSD=async()=>{let response=await fetch("https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=jpy%2Cusd"),json=await response.json(),jpyusd;return parseInt(json.bitcoin.jpy)/parseInt(json.bitcoin.usd)},watchJPYUSD=async()=>{nuko.jpyusd=await getJPYUSD(),$("#jpyusd").text(nuko.jpyusd.toFixed(2)),updateLimit()},approveCoin=async(tokenContractAddress,spenderAddress,id)=>{console.log("try approving "+tokenContractAddress);let tokenContract=new web3.eth.Contract(abiERC20,tokenContractAddress),tokenDecimals=web3.utils.toBN(18),tokenAmountToApprove=web3.utils.toBN(999e9),calculatedApproveValue=web3.utils.toHex(tokenAmountToApprove.mul(web3.utils.toBN(10).pow(tokenDecimals)));await tokenContract.methods.approve(spenderAddress,calculatedApproveValue).send({from:nuko.wallet[0].address,gasLimit:web3.utils.toHex(1e5),gasPrice:web3.utils.toHex(1e9*nukoZ.gas.list.fast)}).once("transactionHash",hash=>{$(id).text("sent"),console.log(hash)}).once("receipt",receipt=>{console.log(receipt),$(id).text("done")})},updateLimit=()=>{$("#upperLimit").text(nuko.upperThreshold.toFixed(2)),$("#lowerLimit").text(nuko.lowerThreshold.toFixed(2))},autoSwapMatic=async()=>{const maticVal=await(async()=>{let m=parseFloat(web3.utils.fromWei(nuko.balanceMATIC));return m=Math.floor(m*Math.pow(10,4))/Math.pow(10,4),m})();if(maticVal>nuko.lowerSwapMaticThreshold)return;if(0==nuko.lowerSwapMaticThreshold||0==nuko.swapMaticAmount)return;const jpycVal=await(async()=>{let m=parseFloat(web3.utils.fromWei(nuko.balanceJPYC));return m=Math.floor(m*Math.pow(10,2))/Math.pow(10,2),m})(),usdcVal=await(async()=>{let m=parseFloat(web3.utils.fromWei(nuko.balanceUSDC,"mwei"));return m=Math.floor(m*Math.pow(10,4))/Math.pow(10,4),m})();if(jpycVal>1){let jpycPrice=0,rateReserveMatic=0,rateReserveJpyc=0,contract=new web3.eth.Contract(abi,contractAddress.pairMATIC_JPYC);await contract.methods.getReserves().call().then(values=>{jpycPrice=Math.floor(values[1]/values[0]*Math.pow(10,2))/Math.pow(10,2),jpycPrice*=swapMaticAmount,rateReserveMatic=values[0]/10**decimal.MATIC,rateReserveJpyc=values[1]/10**decimal.JPYC});let rateRaw=rateReserveJpyc/rateReserveMatic,rate=Math.floor(rateRaw*Math.pow(10,2))/Math.pow(10,2),maticJpycMinAmout=jpycPrice/rate*(1-nuko.swapSlippage),amountIn=Math.floor(jpycPrice*10**decimal.JPYC)/10**decimal.JPYC;amountIn=web3.utils.toWei(amountIn.toString());let amountOut=Math.floor(maticJpycMinAmout*10**decimal.MATIC)/10**decimal.MATIC;amountOut=web3.utils.toWei(amountOut.toString());let gas=nukoZ.gas.price<nuko.swapGasMax?nukoZ.gas.price:nuko.swapGasMax;const swap=async()=>{try{await nuko.swapContract[0].methods.swapExactTokensForETH(web3.utils.toHex(amountIn),web3.utils.toHex(amountOut),[contractAddress.JPYC,contractAddress.MATIC],nuko.wallet[0].address,Math.floor(Date.now()/1e3)+300).send({from:nuko.wallet[0].address,gasLimit:web3.utils.toHex(nukoZ.gas.limit),gasPrice:web3.utils.toHex(1e9*gas)})}catch(e){console.error(e)}};await swap()}else if(usdcVal>1){let usdcPrice=0,rateReserveMatic=0,rateReserveUsdc=0,contract=new web3.eth.Contract(abi,contractAddress.pairMATIC_USDC);await contract.methods.getReserves().call().then(values=>{usdcPrice=Math.floor(values[1]/(values[0]/1e12)*Math.pow(10,4))/Math.pow(10,4),usdcPrice*=nuko.swapMaticAmount,rateReserveMatic=values[0]/10**decimal.MATIC,rateReserveUsdc=values[1]/10**decimal.USDC});let rateRaw=rateReserveUsdc/rateReserveMatic,rate=Math.floor(rateRaw*Math.pow(10,4))/Math.pow(10,4),maticUsdcMinAmout=usdcPrice/rate*(1-nuko.swapSlippage),amountIn=Math.floor(usdcPrice*10**decimal.USDC)/10**decimal.USDC;amountIn=web3.utils.toWei(amountIn.toString(),"mwei");let amountOut=Math.floor(maticUsdcMinAmout*10**decimal.MATIC)/10**decimal.MATIC;amountOut=web3.utils.toWei(amountOut.toString());let gas=nukoZ.gas.price<nuko.swapGasMax?nukoZ.gas.price:nuko.swapGasMax;const swap=async()=>{try{await nuko.swapContract[0].methods.swapExactTokensForETH(web3.utils.toHex(amountIn),web3.utils.toHex(amountOut),[contractAddress.USDC,contractAddress.MATIC],nuko.wallet[0].address,Math.floor(Date.now()/1e3)+300).send({from:nuko.wallet[0].address,gasLimit:web3.utils.toHex(nukoZ.gas.limit),gasPrice:web3.utils.toHex(1e9*gas)})}catch(e){console.error(e)}};await swap()}},main=()=>{$("#versionText").text("ver. 20210924.0"),$("#versionText2").text("ver. 20210924.0"),initialize(),nuko.balanceContractJPYC=new web3.eth.Contract(abiERC20,contractAddress.JPYC),nuko.balanceContractUSDC=new web3.eth.Contract(abiERC20,contractAddress.USDC),nuko.contractRate[0]=new web3.eth.Contract(abi,contractAddress.pairQuick),nuko.contractRate[1]=new web3.eth.Contract(abi,contractAddress.pairSushi),nuko.swapContract[0]=new web3.eth.Contract(abiUniswapV2Router,contractAddress.routerQuick),nuko.swapContract[1]=new web3.eth.Contract(abiUniswapV2Router,contractAddress.routerSushi),watchRate().then(Nuko.API.getCommunityBalance(nuko.wallet[0].address,nuko,updateCommunityBalance)),nuko.rateId=setInterval(watchRate,nuko.rateInterval),watchGas(),setInterval(watchGas,nukoZ.gas.interval),watchJPYUSD(),nuko.jpyusdId=setInterval(watchJPYUSD,nuko.jpyusdInterval),nuko.verId=setInterval(checkLatestVersion,nuko.versionInterval),Nuko.API.getActiveUsers(nuko.wallet[0].address),setInterval(()=>{Nuko.API.getActiveUsers(nuko.wallet[0].address)},nuko.keepaliveInterval),setInterval(()=>{Nuko.API.getCommunityBalance(nuko.wallet[0].address,nuko,updateCommunityBalance)},3*nuko.keepaliveInterval),setInterval(()=>{web3.currentProvider.connected||(nuko.currentWeb3Provider=(nuko.currentWeb3Provider+1)%NODE_URL.length,web3.setProvider(NODE_URL[nuko.currentWeb3Provider]),console.log("change RPC node to ",NODE_URL[nuko.currentWeb3Provider]))},15e3)},updateAccount=()=>{null==nuko.wallet?$("#wallet").text("Create or Import Wallet"):($("#wallet").text(nuko.wallet[0].address),Nuko.ETC.sha256(nuko.wallet[0].address).then(hash=>{localStorage.user=hash}))},resizeChart=()=>{let w=$("#containerBody").width()-400;chartJPYCUSDC.resize(w,ctx.clientHeight)},updateLiquidity=()=>{$("#quickLiquidity").text("$"+(nuko.rateReserveUSDC[0]+nuko.rateReserveJPYC[0]/nuko.rate[0]).toLocaleString(void 0,{maximumFractionDigits:0})),$("#quickUSDC").text(nuko.rateReserveUSDC[0].toLocaleString(void 0,{maximumFractionDigits:0})+" USDC"),$("#quickJPYC").text(nuko.rateReserveJPYC[0].toLocaleString(void 0,{maximumFractionDigits:0})+" JPYC"),$("#sushiLiquidity").text("$"+(nuko.rateReserveUSDC[1]+nuko.rateReserveJPYC[1]/nuko.rate[1]).toLocaleString(void 0,{maximumFractionDigits:0})),$("#sushiUSDC").text(nuko.rateReserveUSDC[1].toLocaleString(void 0,{maximumFractionDigits:0})+" USDC"),$("#sushiJPYC").text(nuko.rateReserveJPYC[1].toLocaleString(void 0,{maximumFractionDigits:0})+" JPYC")},checkLatestVersion=()=>{fetch("https://nuko973663.github.io/JPYCstabilizer/version.json").then(res=>{res.ok&&res.json().then(j=>{if(console.log("latest version: ",j.version," current version: ","20210924.0"),parseFloat(j.version)>parseFloat("20210924.0")){if(!nuko.versionAlertFlag){let message=`New version ${j.version} available!`;showAlert(message),nuko.versionAlertFlag=!0}nuko.reloadAvailableUpdates&&window.location.reload(!0)}})})},showAlert=message=>{let txt=`  <div class="alert alert-warning alert-dismissible fade show" role="alert">\n    ${message}\n    <button type="button" class="close" data-dismiss="alert" aria-label="Close">\n      <span aria-hidden="true">&times;</span>\n    </button>\n  </div>`;$("#alert").append(txt)},initialize=()=>{null==localStorage.gasPref&&(localStorage.gasPref="fastest"),nukoZ.gas.pref=localStorage.gasPref,null==localStorage.lowerSwapMaticThreshold&&(localStorage.lowerSwapMaticThreshold="0"),nuko.lowerSwapMaticThreshold=parseFloat(localStorage.lowerSwapMaticThreshold),null==localStorage.swapMaticAmount&&(localStorage.swapMaticAmount="0"),nuko.swapMaticAmount=parseFloat(localStorage.swapMaticAmount);try{web3.eth.accounts.wallet.load(nuko.password),nuko.wallet=web3.eth.accounts.wallet,updateAccount()}catch(e){}$("#createWallet").on("click",()=>{$("#import").hide(),$("#createNewWallet").show(),$("#privateKey").prop("readonly",!0),$("#modalTitle").text("Create New Wallet"),$("#exampleModal").modal("show")}),$("#importWallet").on("click",()=>{$("#import").show(),$("#createNewWallet").hide(),$("#modalTitle").text("Import Wallet"),$("#privateKey").prop("readonly",!1),$("#exampleModal").modal("show")}),$("#lowerSwapMaticThreshold").val(nuko.lowerSwapMaticThreshold),$("#swapMaticAmount").val(nuko.swapMaticAmount),$("#approveJPYC0").on("click",()=>{$("#approveJPYC0").addClass("disabled"),approveCoin(contractAddress.JPYC,contractAddress.routerQuick,"#approveJPYCtext0")}),$("#approveUSDC0").on("click",()=>{$("#approveUSDC0").addClass("disabled"),approveCoin(contractAddress.USDC,contractAddress.routerQuick,"#approveUSDCtext0")}),$("#approveJPYC1").on("click",()=>{$("#approveJPYC1").addClass("disabled"),approveCoin(contractAddress.JPYC,contractAddress.routerSushi,"#approveJPYCtext1")}),$("#approveUSDC1").on("click",()=>{$("#approveUSDC1").addClass("disabled"),approveCoin(contractAddress.USDC,contractAddress.routerSushi,"#approveUSDCtext1")}),$("#createNewWallet").on("click",()=>{web3.eth.accounts.wallet.clear(),nuko.wallet=web3.eth.accounts.wallet.create(1),web3.eth.accounts.wallet.save(nuko.password),$("#address").val(nuko.wallet[0].address),$("#privateKey").val(nuko.wallet[0].privateKey),updateAccount()}),$("#logout").on("click",()=>{web3.eth.accounts.wallet.clear(),web3.eth.accounts.wallet.save(nuko.password),$("#address").val(""),$("#privateKey").val(""),nuko.wallet=null,updateAccount(),$("#logoutModal").modal("hide")}),$("#import").on("click",()=>{console.log("import");try{let account=web3.eth.accounts.privateKeyToAccount($("#privateKey").val());web3.eth.accounts.wallet.clear(),web3.eth.accounts.wallet.add(account),nuko.wallet=web3.eth.accounts.wallet,web3.eth.accounts.wallet.save(nuko.password),$("#address").val(nuko.wallet[0].address),$("#privateKey").val(nuko.wallet[0].privateKey),updateAccount()}catch(e){console.log(e)}}),$("#swapSwitch").on("change",()=>{localStorage.switch=$("#swapSwitch").prop("checked")}),nukoZ.gas.labels.forEach(label=>{let str=label[0].toUpperCase()+label.substring(1);$("#gas"+str).on("click",()=>{nukoZ.gas.pref=label,localStorage.gasPref=nukoZ.gas.pref,watchGas()})}),$("#submitAutoSwap").on("click",()=>{let lowerSwapMaticThreshold=$("#lowerSwapMaticThreshold").val(),swapMaticAmount=$("#swapMaticAmount").val();localStorage.lowerSwapMaticThreshold=lowerSwapMaticThreshold||"0",localStorage.swapMaticAmount=swapMaticAmount||"0",nuko.lowerSwapMaticThreshold=parseFloat(localStorage.lowerSwapMaticThreshold),nuko.swapMaticAmount=parseFloat(localStorage.swapMaticAmount),$("#modalAutoswapMatic").modal("hide")}),updateLimit(),null==localStorage.switch&&(localStorage.switch="false"),"true"==localStorage.switch&&$("#swapSwitch").bootstrapToggle("on"),nuko.swapLog=JSON.parse(localStorage.getItem("swapLog")||"[]");let table=$("#dataTable").DataTable();nuko.swapLog.forEach(log=>{log[4]=log[4].toLocaleString(void 0,{maximumFractionDigits:2}),log[5]=log[5].toLocaleString(void 0,{maximumFractionDigits:2}),table.row.add(log)}),table.column("0:visible").order("dsc").draw(),1==!localStorage.sentPastActivity&&(nuko.swapLog.forEach(log=>{let jpyc,usdc,total,rate=parseFloat(log[3].toString().slice(-6));"JPYC"==log[1]?(jpyc=parseFloat(log[4]),usdc=0,total=jpyc/rate):(jpyc=0,usdc=parseFloat(log[4]),total=usdc),Nuko.API.postWin(log[0],nuko.wallet[0].address,usdc,jpyc,total,"")}),localStorage.sentPastActivity=1),updateAllowance(),nuko.upperThreshold=parseFloat(localStorage.upperThreshold?localStorage.upperThreshold:117.7),nuko.lowerThreshold=parseFloat(localStorage.lowerThreshold?localStorage.lowerThreshold:115.7),$("#swapUpperThreshold").val(nuko.upperThreshold.toFixed(2)),$("#swapLowerThreshold").val(nuko.lowerThreshold.toFixed(2)),$("#submitOption").on("click",()=>{nuko.upperThreshold=parseFloat($("#swapUpperThreshold").val()),nuko.lowerThreshold=parseFloat($("#swapLowerThreshold").val()),localStorage.upperThreshold=nuko.upperThreshold,localStorage.lowerThreshold=nuko.lowerThreshold,$("#modalOption").modal("hide"),console.log(nuko),updateLimit()}),nuko.swapMinJPYC=parseFloat(localStorage.swapMinJPYC?localStorage.swapMinJPYC:1e3),nuko.swapMinUSDC=parseFloat(localStorage.swapMinUSDC?localStorage.swapMinUSDC:10),$("#swapMinJPYC").val(nuko.swapMinJPYC),$("#swapMinUSDC").val(nuko.swapMinUSDC),$("#swapMinJPYC").on("change",()=>{nuko.swapMinJPYC=parseFloat($("#swapMinJPYC").val()),localStorage.swapMinJPYC=nuko.swapMinJPYC,console.log(nuko.swapMinJPYC)}),$("#swapMinUSDC").on("change",()=>{nuko.swapMinUSDC=parseFloat($("#swapMinUSDC").val()),localStorage.swapMinUSDC=nuko.swapMinUSDC,console.log(nuko.swapMinUSDC)}),nuko.reloadAvailableUpdates=!!localStorage.reloadAvailableUpdates&&"true"==localStorage.reloadAvailableUpdates,$("#reloadAvailableUpdate").prop("checked",nuko.reloadAvailableUpdates),$("#reloadAvailableUpdate").on("change",()=>{nuko.reloadAvailableUpdates=$("#reloadAvailableUpdate").prop("checked"),localStorage.reloadAvailableUpdates=nuko.reloadAvailableUpdates})},abi=[{constant:!0,inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"_reserve0",type:"uint112"},{internalType:"uint112",name:"_reserve1",type:"uint112"},{internalType:"uint32",name:"_blockTimestampLast",type:"uint32"}],payable:!1,stateMutability:"view",type:"function"}],abiERC20=[{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],type:"function"},{constant:!1,inputs:[{name:"spender",type:"address"},{name:"tokens",type:"uint256"}],name:"approve",outputs:[{name:"success",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}],abiUniswapV2Router=[{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForTokens",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountIn",type:"uint256"},{internalType:"uint256",name:"amountOutMin",type:"uint256"},{internalType:"address[]",name:"path",type:"address[]"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swapExactTokensForETH",outputs:[{internalType:"uint256[]",name:"amounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"}];function number_format(number,decimals,dec_point,thousands_sep){number=(number+"").replace(",","").replace(" ","");var n=isFinite(+number)?+number:0,prec=isFinite(+decimals)?Math.abs(decimals):0,sep=void 0===thousands_sep?",":thousands_sep,dec=void 0===dec_point?".":dec_point,s="",toFixedFix;return(s=(prec?function(n,prec){var k=Math.pow(10,prec);return""+Math.round(n*k)/k}(n,prec):""+Math.round(n)).split("."))[0].length>3&&(s[0]=s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g,sep)),(s[1]||"").length<prec&&(s[1]=s[1]||"",s[1]+=new Array(prec-s[1].length+1).join("0")),s.join(dec)}main(),$(document).ready(()=>{$("#dataTable").DataTable()}),Chart.defaults.global.defaultFontFamily="Nunito",Chart.defaults.global.defaultFontColor="#858796";var ctx=document.getElementById("myAreaChart"),chartJPYCUSDC=new Chart(ctx,{type:"line",data:{labels:[],datasets:[{label:"QuickSwap",lineTension:.3,backgroundColor:"rgba(78, 115, 223, 0.05)",borderColor:"rgba(78, 115, 223, 1)",pointRadius:3,pointBackgroundColor:"rgba(78, 115, 223, 1)",pointBorderColor:"rgba(78, 115, 223, 1)",pointHoverRadius:3,pointHoverBackgroundColor:"rgba(78, 115, 223, 1)",pointHoverBorderColor:"rgba(78, 115, 223, 1)",pointHitRadius:10,pointBorderWidth:2,data:[]},{label:"SushiSwap",lineTension:.3,backgroundColor:"rgba(204, 0, 255, 0.05)",borderColor:"rgba(204, 0, 255, 1)",pointRadius:3,pointBackgroundColor:"rgba(204, 0, 255, 1)",pointBorderColor:"rgba(204, 0, 255, 1)",pointHoverRadius:3,pointHoverBackgroundColor:"rgba(204, 0, 255, 1)",pointHoverBorderColor:"rgba(204, 0, 255, 1)",pointHitRadius:10,pointBorderWidth:2,data:[]}]},options:{onResize:resizeChart,resizeDelay:100,responsive:!0,maintainAspectRatio:!1,layout:{padding:{left:10,right:25,top:25,bottom:0}},scales:{xAxes:[{time:{unit:"date"},gridLines:{display:!1,drawBorder:!1},ticks:{maxTicksLimit:7}}],yAxes:[{ticks:{maxTicksLimit:5,padding:10,callback:function(value,index,values){return number_format(value,2)+""}},gridLines:{color:"rgb(234, 236, 244)",zeroLineColor:"rgb(234, 236, 244)",drawBorder:!1,borderDash:[2],zeroLineBorderDash:[2]}}]},legend:{display:!0},tooltips:{backgroundColor:"rgb(255,255,255)",bodyFontColor:"#858796",titleMarginBottom:10,titleFontColor:"#6e707e",titleFontSize:14,borderColor:"#dddfeb",borderWidth:1,xPadding:15,yPadding:15,displayColors:!1,intersect:!1,mode:"index",caretPadding:10,callbacks:{label:function(tooltipItem,chart){var datasetLabel;return(chart.datasets[tooltipItem.datasetIndex].label||"")+": "+number_format(tooltipItem.yLabel,2)}}}}}),ctx=document.getElementById("myPieChart"),chartCommunityBalance=new Chart(ctx,{type:"doughnut",data:{labels:["USDC","JPYC"],datasets:[{data:[55,30],backgroundColor:["#1cc88a","#4e73df"],hoverBackgroundColor:["#17a673","#2e59d9"],hoverBorderColor:"rgba(234, 236, 244, 1)"}]},options:{maintainAspectRatio:!1,tooltips:{backgroundColor:"rgb(255,255,255)",bodyFontColor:"#858796",borderColor:"#dddfeb",borderWidth:1,xPadding:15,yPadding:15,displayColors:!1,caretPadding:10},legend:{display:!1},cutoutPercentage:80}});
